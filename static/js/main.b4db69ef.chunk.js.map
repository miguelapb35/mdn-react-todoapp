{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","filter","updatedTasks","tasks","map","setTasks","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4db69ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Form(props) {\r\nconst [name, setName] = useState('');\r\n\r\nfunction handleChange(e) {\r\n  setName(e.target.value);\r\n}\r\n\r\nfunction handleSubmit(e) {\r\n  e.preventDefault();\r\n  props.addTask(name);\r\n  setName('');\r\n}  \r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        ></input>\r\n        <button type='submit' className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n      </form>    \r\n  );\r\n}\r\n\r\nexport default Form","import React from 'react';\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type='button'\r\n      className='btn toggle-btn'\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span> {props.name} </span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton","import React, {useEffect, useRef, useState } from 'react';\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={props.id} className=\"todo-label\">\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\" \r\n          value={newName}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n          />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type='button'\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming  {props.name} </span>\r\n        </button>\r\n        <button type='submit' className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name} </span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input \r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label htmlFor={props.id} className=\"todo-label\">\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type='button'\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n        >\r\n          Edit <span className='visually-hidden'> {props.name} </span>\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='btn btn__danger'\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className='visually-hidden'> {props.name} </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n  \r\n  return <li className=\"todo\"> {isEditing ? editingTemplate : viewTemplate} </li>\r\n\r\n}","import React, { useState, useRef, useEffect } from 'react';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport Todo from \"./components/Todo\";\nimport { nanoid } from 'nanoid';\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        //  whose completed prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n    <Todo \n      id={task.id} \n      name={task.name} \n      completed={task.completed}\n      key={task.id}  \n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name} \n      isPressed={name === filter}\n      setFilter={setFilter}\n      />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>  \n      <h2\n        id=\"list-heading\"\n        tabIndex=\"-1\"\n        ref={listHeadingRef}\n      >{headingText} </h2>\n        <ul\n          className='todo-list stack-large stack-exception'\n          aria-labelledby=\"list-heading\"\n        >\n          {taskList}\n        </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }  \n];\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}